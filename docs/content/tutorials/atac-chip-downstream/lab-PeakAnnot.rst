.. below role allows to use the html syntax, for example :raw-html:`<br />`
.. role:: raw-html(raw)
    :format: html


=================
Peak Annotation
=================



**Learning outcomes**

Using ``ChIPseeker`` package

- to profile ATAC-seq signal by genomics location and by proximity to TSS regions

.. - to profile ChIP signal by genomics location and by ChIP binding to TSS regions

- to annotate peaks with the nearest gene

.. - to annotate peaks, visualise and compare annotations

- to run and compare functional enrichment



.. contents:: Contents
    :depth: 1
    :local:





Introduction
=============

In this tutorial we use an R / Bioconductor package ``ChIPseeker``, to have a look at the ATAC / ChIP profiles, annotate peaks and visualise annotations.
We will also perform functional annotation of peaks using ``clusterProfiler``.


The tutorial is based on the `ChIPseeker package tutorial <http://bioconductor.org/packages/devel/bioc/vignettes/ChIPseeker/inst/doc/ChIPseeker.html>`_ so feel free to have this open alongside to read and experiment more.


Data & Methods
===============

We will build upon the main labs:

* ATAC-seq: all detected peaks (merged consensus peaks);

* ATAC-seq: differentially accessible peaks;

.. * ChIP-seq: using the same dataset and results from ``DiffBind`` analyses that we have saved under ``DiffBind.RData``. 


Setting-up
===========

You can continue working in the ``analysis/peaks/consensus`` directory. 

We need access to file ``nk_merged_peaksid.bed`` and annotation libraries, whcih are preinstalled. We access them via:

.. code-block:: bash

	module load R_packages/4.1.1


We activate R console upon typing ``R`` in the terminal.


We begin by loading necessary libraries:

.. code-block:: R

	library(ChIPseeker)
	library(TxDb.Hsapiens.UCSC.hg38.knownGene)

	library(GenomicAlignments)
	library(GenomicFeatures)

	library(clusterProfiler)
	library(biomaRt)
	library(org.Hs.eg.db)  
	library(ReactomePA)

	txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene


:raw-html:`<br />`



Peaks Coverage Plot
=====================

After peak calling one may want to visualise distribution of peaks locations over the whole genome. Function ``covplot`` calculates coverage of peaks regions over chromosomes.

Let's load in the data (peaks called on nun subset data) and transform the data frame to GenomicRanges object (``GRanges``):

.. code-block:: R

	pth2peaks_bed="nk_merged_peaksid.bed"

	peaks.bed=read.table(pth2peaks_bed, sep="\t", header=FALSE, blank.lines.skip=TRUE)
	rownames(peaks.bed)=peaks.bed[,4]

	peaks.gr <- GRanges(seqnames=peaks.bed[,1], ranges=IRanges(peaks.bed[,2], peaks.bed[,3]), strand="*", mcols=data.frame(peakID=peaks.bed[,4]))


If you are not familiar with ``GRanges`` objects, this is how the structure is::

	> peaks.gr
	GRanges object with 55108 ranges and 1 metadata column:
	          seqnames              ranges strand |           mcols.peakID
	             <Rle>           <IRanges>  <Rle> |            <character>
	      [1]     chr1         10004-10442      * | nk_merged_macsBroadP..
	      [2]     chr1         28945-29419      * | nk_merged_macsBroadP..
	      [3]     chr1       180755-181858      * | nk_merged_macsBroadP..
	      [4]     chr1       191246-191984      * | nk_merged_macsBroadP..
	      [5]     chr1       778381-779290      * | nk_merged_macsBroadP..
	      ...      ...                 ...    ... .                    ...
	  [55104]     chrX 155880949-155881831      * | nk_merged_macsBroadP..
	  [55105]     chrX 155997337-155997938      * | nk_merged_macsBroadP..
	  [55106]     chrX 156016628-156016865      * | nk_merged_macsBroadP..
	  [55107]     chrX 156025099-156025486      * | nk_merged_macsBroadP..
	  [55108]     chrX 156030206-156030747      * | nk_merged_macsBroadP..
	  -------
	  seqinfo: 82 sequences from an unspecified genome; no seqlengths


To inspect peak coverage along the chromosomes:

.. code-block:: R

	covplot(peaks.gr, chrs=c("chr14", "chr15"))

	#to save the image to file
	pdf("PeakCoverage.pdf")
	covplot(peaks.gr, chrs=c("chr14", "chr15"))
	dev.off()



:raw-html:`<br />`

.. admonition:: Distribution of ATAC peaks along chromosomes.
   :class: dropdown, warning

   .. image:: figures/PeakCoverage.png
          :width: 300px


:raw-html:`<br />`



Peak Annotation
===================

To annotate peaks with closest genomic features:

.. code-block:: R

	bed.annot = annotatePeak(peaks.gr, tssRegion=c(-3000, 3000),TxDb=txdb, annoDb="org.Hs.eg.db")


Let's inspect the results::

	> bed.annot 
	Annotated peaks generated by ChIPseeker
	54970/55108  peaks were annotated
	Genomic Annotation Summary:
	              Feature   Frequency
	9    Promoter (<=1kb) 32.22484992
	10   Promoter (1-2kb)  3.95488448
	11   Promoter (2-3kb)  3.41095143
	4              5' UTR  0.34018556
	3              3' UTR  2.07931599
	1            1st Exon  1.87011097
	7          Other Exon  2.72330362
	2          1st Intron 11.74458796
	8        Other Intron 21.09150446
	6  Downstream (<=300)  0.09459705
	5   Distal Intergenic 20.46570857


Over 30% of peaks localise to TSS, as expected in an ATAC-seq experiment.

Let's see peak annotations:

.. code-block:: R

	annot_peaks=as.data.frame(bed.annot)


This is the resulting data frame::

	 head(annot_peaks)
	  seqnames  start    end width strand              mcols.peakID
	1     chr1  10004  10442   439      * nk_merged_macsBroadPeak_1
	2     chr1  28945  29419   475      * nk_merged_macsBroadPeak_2
	3     chr1 180755 181858  1104      * nk_merged_macsBroadPeak_3
	4     chr1 191246 191984   739      * nk_merged_macsBroadPeak_4
	5     chr1 778381 779290   910      * nk_merged_macsBroadPeak_5
	6     chr1 817270 817490   221      * nk_merged_macsBroadPeak_6
	                                                   annotation geneChr geneStart
	1                                            Promoter (1-2kb)       1     11869
	2                                            Promoter (<=1kb)       1     14404
	3                                            Promoter (<=1kb)       1    182696
	4 Intron (ENST00000623083.4/ENST00000623083.4, intron 1 of 9)       1    187891
	5                                            Promoter (<=1kb)       1    725885
	6                                            Promoter (<=1kb)       1    817371
	  geneEnd geneLength geneStrand    geneId      transcriptId distanceToTSS
	1   14409       2541          1 100287102 ENST00000456328.2         -1427
	2   29570      15167          2    653635 ENST00000488147.1           151
	3  184174       1479          1 102725121 ENST00000624431.2          -838
	4  187958         68          2 102466751 ENST00000612080.1         -3288
	5  778626      52742          2 100288069 ENST00000506640.2             0
	6  819837       2467          1    400728 ENST00000326734.2             0
	          ENSEMBL       SYMBOL                                    GENENAME
	1 ENSG00000223972      DDX11L1  DEAD/H-box helicase 11 like 1 (pseudogene)
	2 ENSG00000227232       WASH7P           WASP family homolog 7, pseudogene
	3 ENSG00000223972     DDX11L17 DEAD/H-box helicase 11 like 17 (pseudogene)
	4 ENSG00000278267    MIR6859-1                             microRNA 6859-1
	5            <NA> LOC100288069                uncharacterized LOC100288069
	6 ENSG00000177757       FAM87B family with sequence similarity 87 member B


It can be saved to a file:

.. code-block:: R

	write.table(annot_peaks, "nk_merged_annotated.txt", 
		append = FALSE, 
		quote = FALSE, 
		sep = "\t",
		row.names = FALSE,
		col.names = TRUE, 
		fileEncoding = "")


We can also visualise the annotation summary:

.. code-block:: R

	pdf("AnnotVis.pdf")
	upsetplot(bed.annot, vennpie=TRUE)
	dev.off()

.. admonition:: Visualisation of ATAC peaks annotations.
   :class: dropdown, warning

   .. image:: figures/AnnotVis.png
          :width: 300px


:raw-html:`<br />`



Distribution of loci with respect to TSS:

.. code-block:: R

	pdf("TSSdist.pdf")
	plotDistToTSS(bed.annot, title="Distribution of ATAC-seq peaks loci\nrelative to TSS")
	dev.off()


.. admonition:: Summary of ATAC-seq peaks relative to TSS.
   :class: dropdown, warning

   .. image:: figures/TSSdist.png
          :width: 300px


:raw-html:`<br />`




Functional Analysis
=========================

Having obtained annotations to nearest genes, we can perform **functional enrichment analysis to identify predominant biological themes** among these genes by incorporating knowledge provided by biological ontologies, e.g. GO (Gene Ontology, Ashburner et al. 2000) and Reactome (Croft et al. 2013).

In this tutorial we use the merged consensus peaks set. This analysis can also be performed on results of differential accessibility / occupancy.


Let's first annotate the peaks with Reactome. 


Reactome pathway enrichment of genes defined as the nearest feature to the peaks:

.. code-block:: R

	#finding enriched Reactome pathways using chromosome 1 and 2 genes as a background
	pathway.reac <- enrichPathway(as.data.frame(annot_peaks)$geneId)

	#previewing enriched Reactome pathways
	head(pathway.reac)


This is the result (we skip column 8, as it is very broad - contains the gene IDs in set)::

	> colnames(as.data.frame(pathway.reac))
	[1] "ID"          "Description" "GeneRatio"   "BgRatio"     "pvalue"     
	[6] "p.adjust"    "qvalue"      "geneID"      "Count"      

	> pathway.reac[1:10,c(1:7,9)]
	                         ID                    Description GeneRatio   BgRatio
	R-HSA-9012999 R-HSA-9012999               RHO GTPase cycle  407/8448 443/10856
	R-HSA-9013149 R-HSA-9013149              RAC1 GTPase cycle  176/8448 185/10856
	R-HSA-9013148 R-HSA-9013148             CDC42 GTPase cycle  151/8448 159/10856
	R-HSA-4420097 R-HSA-4420097           VEGFA-VEGFR2 Pathway   97/8448  99/10856
	R-HSA-194138   R-HSA-194138              Signaling by VEGF  105/8448 108/10856
	R-HSA-9013404 R-HSA-9013404              RAC2 GTPase cycle   86/8448  88/10856
	R-HSA-9013106 R-HSA-9013106              RHOC GTPase cycle   73/8448  74/10856
	R-HSA-449147   R-HSA-449147      Signaling by Interleukins  402/8448 462/10856
	R-HSA-8980692 R-HSA-8980692              RHOA GTPase cycle  137/8448 147/10856
	R-HSA-5683057 R-HSA-5683057 MAPK family signaling cascades  287/8448 325/10856
	                    pvalue     p.adjust       qvalue Count
	R-HSA-9012999 7.645956e-16 1.161421e-12 8.893455e-13   407
	R-HSA-9013149 4.636645e-11 3.521532e-08 2.696575e-08   176
	R-HSA-9013148 1.771414e-09 8.969257e-07 6.868112e-07   151
	R-HSA-4420097 6.278792e-09 2.384371e-06 1.825807e-06    97
	R-HSA-194138  8.026320e-09 2.438396e-06 1.867176e-06   105
	R-HSA-9013404 8.084405e-08 2.046702e-05 1.567240e-05    86
	R-HSA-9013106 1.807641e-07 3.647964e-05 2.793389e-05    73
	R-HSA-449147  1.921245e-07 3.647964e-05 2.793389e-05   402
	R-HSA-8980692 3.786856e-07 6.391371e-05 4.894123e-05   137
	R-HSA-5683057 5.815485e-07 8.479004e-05 6.492706e-05   287

We can see familar terms which can be connected to sample biology: Signaling by Interleukins, MAPK family signaling cascades.


Let's search for enriched GO terms:

.. code-block:: R

	pathway.GO <- enrichGO(as.data.frame(annot_peaks)$geneId, org.Hs.eg.db, ont = "MF")


These results look reasonable as well::

	> pathway.GO[1:11,c(1,2,7)]
	                   ID                                Description       qvalue
	GO:0004674 GO:0004674   protein serine/threonine kinase activity 2.306759e-17
	GO:0051020 GO:0051020                             GTPase binding 4.894211e-13
	GO:0060090 GO:0060090                 molecular adaptor activity 5.215027e-13
	GO:0030695 GO:0030695                  GTPase regulator activity 3.765106e-12
	GO:0031267 GO:0031267                       small GTPase binding 8.221800e-12
	GO:0030674 GO:0030674     protein-macromolecule adaptor activity 1.046226e-11
	GO:0045296 GO:0045296                           cadherin binding 6.869553e-11
	GO:0015631 GO:0015631                            tubulin binding 7.472641e-11
	GO:0005085 GO:0005085 guanyl-nucleotide exchange factor activity 2.073955e-10
	GO:0008017 GO:0008017                        microtubule binding 5.602393e-08
	GO:0003712 GO:0003712         transcription coregulator activity 2.294003e-07



.. GSEA
.. =======



.. .. code-block:: R








